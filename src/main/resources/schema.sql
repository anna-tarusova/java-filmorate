CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
    ID INTEGER NOT NULL,
    NAME CHARACTER VARYING(40),
    CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.MPA_RATING (
    ID INTEGER NOT NULL,
    NAME CHARACTER VARYING(40),
    CONSTRAINT MPA_RATING_PK PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
    ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    NAME CHARACTER VARYING(40),
    DESCRIPTION CHARACTER VARYING(100),
    RELEASEDATE DATE,
    DURATION INTEGER NOT NULL,
    GENRE_ID INTEGER NOT null,
    MPA_RATING_ID INTEGER NOT null,
    CONSTRAINT FILM_PK PRIMARY KEY (ID)
);
CREATE INDEX IF NOT EXISTS FILM_GENRE_FK_INDEX ON PUBLIC.FILM (GENRE_ID);
CREATE INDEX IF NOT EXISTS FILM_MPA_RATING_FK_INDEX ON PUBLIC.FILM (MPA_RATING_ID);

-- PUBLIC.FILM внешние включи

ALTER TABLE PUBLIC.FILM ADD CONSTRAINT IF NOT EXISTS FILM_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.FILM ADD CONSTRAINT IF NOT EXISTS FILM_MPA_RATING_FK FOREIGN KEY (MPA_RATING_ID) REFERENCES PUBLIC.MPA_RATING(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;


CREATE TABLE IF NOT EXISTS PUBLIC."USER" (
    ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    EMAIL CHARACTER VARYING(40),
    NAME CHARACTER VARYING(40),
    LOGIN CHARACTER VARYING(40),
    BIRTHDATE DATE,
    CONSTRAINT USER_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS USER_EMAIL_INDEX ON PUBLIC."USER" (EMAIL);
CREATE UNIQUE INDEX IF NOT EXISTS USER_NAME_INDEX ON PUBLIC."USER" (LOGIN);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_LIKES (
    FILM_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    CONSTRAINT FILM_LIKES_PK PRIMARY KEY (USER_ID,FILM_ID)
);
CREATE INDEX IF NOT EXISTS FILM_LIKES_FILM_ID_INDEX ON PUBLIC.FILM_LIKES (FILM_ID);
CREATE INDEX IF NOT EXISTS FILM_LIKES_USER_ID_INDEX ON PUBLIC.FILM_LIKES (USER_ID);


-- PUBLIC.FILM_LIKES внешние включи

ALTER TABLE PUBLIC.FILM_LIKES ADD CONSTRAINT IF NOT EXISTS FILM_LIKES_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.FILM_LIKES ADD CONSTRAINT IF NOT EXISTS FILM_LIKES_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;


CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDSHIP (
    USER_ID BIGINT NOT NULL,
    FRIEND_ID BIGINT NOT NULL,
    IS_APPROVED BOOLEAN,
    CONSTRAINT FRIENDSHIP_PK PRIMARY KEY (USER_ID,FRIEND_ID)
);
CREATE INDEX IF NOT EXISTS FRIENDSHIP_FRIEND_ID_USER_FK_INDEX ON PUBLIC.FRIENDSHIP (FRIEND_ID);
CREATE INDEX IF NOT EXISTS FRIENDSHIP_USER_ID_USER_FK_INDEX ON PUBLIC.FRIENDSHIP (USER_ID);


-- PUBLIC.FRIENDSHIP внешние включи

ALTER TABLE PUBLIC.FRIENDSHIP ADD CONSTRAINT IF NOT EXISTS FRIENDSHIP_FRIEND_ID_USER_FK FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC."USER"(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.FRIENDSHIP ADD CONSTRAINT IF NOT EXISTS FRIENDSHIP_USER_ID_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
